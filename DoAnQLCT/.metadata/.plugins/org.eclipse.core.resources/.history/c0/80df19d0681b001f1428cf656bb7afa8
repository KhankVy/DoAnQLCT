package DAO;

import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayList;
import java.util.Calendar;

import MODEL.Transactions;
import UTILS.Utils;

public class GetThuChiDAO {
	private ArrayList<Transactions> dstransactions = new ArrayList<Transactions>();

	// Hàm tính tổng thu theo tháng
	private int calculateMonthlyIncome(int user_id) {
//		int totalIncome = 0;
//		Calendar calendar = Calendar.getInstance();
//		int currentMonth = calendar.get(Calendar.MONTH);
//		int currentYear = calendar.get(Calendar.YEAR);
//
//		for (Transactions transaction : dstransactions) {
//			calendar.setTime(transaction.getDate());
//			int transactionMonth = calendar.get(Calendar.MONTH);
//			int transactionYear = calendar.get(Calendar.YEAR);
//
//			if (transaction.getType().equals("Thu") && transactionMonth == currentMonth
//					&& transactionYear == currentYear) {
//				totalIncome += transaction.getAmount();
//			}
//		}
//		return totalIncome;
		int sodu = 0;
        String query = "SELECT SUM(amount) AS sodu FROM transactions tr JOIN categories cate ON tr.category_id = cate.category_id WHERE tr.user_id = ? AND cate.type = 1";
        
        try{
        	Connection conn = DriverManager.getConnection(Utils.DB_URL, Utils.USER, Utils.PASS);
        	PreparedStatement pstmt = conn.prepareStatement(query)) {
                pstmt.setInt(1, userID);
                ResultSet rs = pstmt.executeQuery();
                if (rs.next()) {
                    sodu = rs.getInt("sodu");
                }
        }catch (SQLException e) {
            e.printStackTrace();
        }
        
        return sodu;
	}

	// Hàm tính tổng chi theo tháng
	private int calculateMonthlyExpense(int user_id) {
		int totalExpense = 0;
		Calendar calendar = Calendar.getInstance();
		int currentMonth = calendar.get(Calendar.MONTH);
		int currentYear = calendar.get(Calendar.YEAR);

		for (Transactions transaction : dstransactions) {
			calendar.setTime(transaction.getDate());
			int transactionMonth = calendar.get(Calendar.MONTH);
			int transactionYear = calendar.get(Calendar.YEAR);

			if (transaction.getType().equals("Chi") && transactionMonth == currentMonth
					&& transactionYear == currentYear) {
				totalExpense += transaction.getAmount();
			}
		}
		return totalExpense;
	}
}
